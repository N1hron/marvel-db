{"version":3,"file":"static/js/904.1785236d.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/error/Error.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/spinner/spinner.svg","components/spinner/Spinner.js","services/MarvelServices.js","hooks/http.hook.js","utils/setListContent.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from \"../../resources/img/avengers.png\";\r\nimport avengersLogo from \"../../resources/img/avengers-logo.png\";\r\n\r\nexport default function AppBanner() {\r\n    return (\r\n        <section className=\"banner\">\r\n            <img src={avengers} alt=\"avengers\" className=\"banner__bg-img\"/>\r\n            <div className=\"banner__text\">\r\n                New comics every week! <br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"avengers-logo\" className=\"banner__logo\"/>\r\n        </section>\r\n    );\r\n}","import error from './error.png';\r\nimport './error.scss'\r\n\r\nfunction Error() {\r\n    return (\r\n        <>\r\n            <img src={error} alt=\"\" className=\"error\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error;","import { useState, useEffect, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport setListContent from '../../utils/setListContent';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport './comicsList.scss';\r\n\r\nexport default function ComicsList() {\r\n    const [comics, setComics] = useState([]),\r\n          [initialLoading, setInitialLoading] = useState(true),\r\n          [offset, setOffset] = useState(0);\r\n\r\n    const {getComics, process, setProcess} = useMarvelServices();\r\n\r\n    useEffect(() => {\r\n        if (initialLoading) {\r\n            updateComics();\r\n        } \r\n    }, [])\r\n\r\n    function updateComics() {\r\n        getComics(offset)\r\n            .then(result => {\r\n                setComics([...comics, ...result]);\r\n                setOffset(offset + 8);\r\n                setInitialLoading(false);\r\n            })\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    function renderComics(comics) {\r\n        return comics.map((comic, i) => (\r\n            <Link key={i} tabIndex={0}\r\n                to={`/comics/${comic.id}`}>\r\n                    <img src={comic.thumbnail} alt={comic.title} className=\"catalog__product-image\"/>\r\n                    <div>\r\n                        <p className=\"catalog__product-title\">{comic.title}</p>\r\n                        <p className=\"catalog__product-price\">{comic.price ? comic.price + '$' : 'NOT AVAILABLE'}</p>\r\n                    </div>\r\n            </Link>\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (comics.length > 8 && process === 'confirmed') {\r\n            window.scrollTo({\r\n                left: 0,\r\n                top: document.body.scrollHeight,\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [process])\r\n\r\n    const content = useMemo(() => {\r\n        return setListContent(process, () => renderComics(comics), initialLoading)\r\n    }, [process])\r\n\r\n    return(\r\n        <section className=\"catalog\">\r\n            <div className=\"catalog__container\">\r\n                {content}\r\n            </div>\r\n            {initialLoading || process === 'error' ? null : \r\n            <button className=\"button button_red\"\r\n                    disabled={process === 'loading'}\r\n                    onClick={updateComics}>\r\n                    {process === 'loading' ? <ReactLoading type='cylon' width='50px' height='50px'/> : 'Load more'}\r\n            </button>}\r\n        </section>\r\n    );\r\n}","import Helmet from 'react-helmet';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nexport default function ComicsPage() {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with Marvel comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}","var _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0s\",\n    calcMode: \"discrete\"\n  }))), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.125s\",\n    calcMode: \"discrete\"\n  }))), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.25s\",\n    calcMode: \"discrete\"\n  }))), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 40,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.875s\",\n    calcMode: \"discrete\"\n  }))), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 40,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.375s\",\n    calcMode: \"discrete\"\n  }))), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.75s\",\n    calcMode: \"discrete\"\n  }))), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.625s\",\n    calcMode: \"discrete\"\n  }))), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.5s\",\n    calcMode: \"discrete\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.abba77cc71e5f76258fc50b87e593ac6.svg\";\nexport { ForwardRef as ReactComponent };","import spinner from './spinner.svg'\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    \r\n    return (\r\n        <>\r\n            <img src={spinner} alt=\"\" className=\"spinner\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import md5 from \"md5\";\r\nimport useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelServices() {\r\n    const {request, process, setProcess} = useHttp();\r\n\r\n    const _offset = 210,\r\n          _apibase = 'https://gateway.marvel.com:443/v1/public/',\r\n          _publickey = 'b613e5c1ee278d1974ac9c3d77544391',\r\n          _privatekey = 'b32e138e4085075474c409641be15ebc5b46dd44';\r\n    \r\n    const timestamp = +new Date(),\r\n          hash = md5(timestamp + _privatekey + _publickey);\r\n\r\n    async function getCharacters(offset = _offset) {\r\n        const result = await request(`${_apibase}characters?` +\r\n                                         `limit=9&offset=${offset}` +\r\n                                         \"&ts=\" + timestamp +\r\n                                         \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                         \"&hash=\" + hash);\r\n            \r\n        return result.data.results.map(_handleChars)\r\n    }\r\n\r\n    async function getCharacterById(id) {\r\n        const response = await request(`${_apibase}characters/${id}?` +\r\n                                            \"&ts=\" + timestamp +\r\n                                            \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                            \"&hash=\" + hash);\r\n\r\n        return _handleChars(response.data.results[0]);\r\n    }\r\n\r\n    async function getComics(offset = 0) {\r\n        const response = await request(`${_apibase}comics?limit=8&offset=${offset}` + \r\n                                       \"&ts=\" + timestamp +\r\n                                       \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                       \"&hash=\" + hash);\r\n\r\n        return response.data.results.map(_handleComics);\r\n    }\r\n\r\n    async function getComicById(id) {\r\n        const response = await request(`${_apibase}comics/${id}?` + \r\n                                        `ts=` + timestamp +\r\n                                        \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                        \"&hash=\" + hash);\r\n\r\n        return _handleComics(response.data.results[0]);\r\n    } \r\n\r\n    async function getCharacterByName(name) {\r\n        const response = await request(`${_apibase}characters?name=${name}&` +\r\n                                        `ts=` + timestamp +\r\n                                        \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                        \"&hash=\" + hash)\r\n        \r\n        return _handleChars(response.data.results[0]);\r\n    }\r\n\r\n    const _handleChars = (response) => ({\r\n        id: response.id,\r\n        name: response.name,\r\n        description: response.description ? response.description : 'There is no description here. Yet...',\r\n        thumbnail: response.thumbnail.path + '.' + response.thumbnail.extension,\r\n        homepage: response.urls[0].url,\r\n        wiki: response.urls[1].url,\r\n        comics: response.comics.items\r\n    })\r\n\r\n    const _handleComics = (comic) => ({\r\n        id: comic.id,\r\n        title: comic.title,\r\n        thumbnail: Object.values(comic.thumbnail).join('.'),\r\n        price: comic.prices[0].price,\r\n        description: comic.description ? comic.description : 'There is no description here. Yet...',\r\n        pages: comic.pageCount,\r\n        language: comic.textObjects[0] ? comic.textObjects[0].language : ''\r\n    })\r\n\r\n    return {\r\n        getCharacters, \r\n        getCharacterById, \r\n        getComics, \r\n        getComicById, \r\n        getCharacterByName, \r\n        process,\r\n        setProcess\r\n    }\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch from ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        } catch(error) {\r\n            setProcess('error');\r\n            return error;\r\n        }\r\n    }, []);\r\n\r\n    return {request, process, setProcess};\r\n}","import Error from '../components/error/Error';\r\nimport Spinner from '../components/spinner/Spinner';\r\n\r\nexport default function setListContent(process, Component, initial) {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n        case 'loading':\r\n            return initial ? <Spinner/> : <Component/>;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n        case 'error':\r\n            return <Error/>;\r\n        default:\r\n    }\r\n}"],"names":["AppBanner","className","src","avengers","alt","avengersLogo","error","ComicsList","useState","comics","setComics","initialLoading","setInitialLoading","offset","setOffset","useMarvelServices","getComics","process","setProcess","updateComics","then","result","useEffect","length","window","scrollTo","left","top","document","body","scrollHeight","behavior","content","useMemo","setListContent","map","comic","i","tabIndex","to","id","thumbnail","title","price","renderComics","disabled","onClick","type","width","height","ComicsPage","Helmet","name","spinner","request","useCallback","url","method","headers","fetch","response","ok","Error","status","json","data","useHttp","_offset","_apibase","timestamp","Date","hash","md5","results","_handleChars","_handleComics","description","path","extension","homepage","urls","wiki","items","Object","values","join","prices","pages","pageCount","language","textObjects","getCharacters","getCharacterById","getComicById","getCharacterByName","Component","initial"],"sourceRoot":""}
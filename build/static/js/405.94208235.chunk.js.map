{"version":3,"file":"static/js/405.94208235.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/error/Error.js","components/pages/SingleCharPage.js","components/singleCharLayout/SingleCharLayout.js","components/singleComicLayout/SingleComicLayout.js","components/singleItemPage/SingleItemPage.js","components/spinner/spinner.svg","components/spinner/Spinner.js","services/MarvelServices.js","hooks/http.hook.js","utils/setContent.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from \"../../resources/img/avengers.png\";\r\nimport avengersLogo from \"../../resources/img/avengers-logo.png\";\r\n\r\nexport default function AppBanner() {\r\n    return (\r\n        <section className=\"banner\">\r\n            <img src={avengers} alt=\"avengers\" className=\"banner__bg-img\"/>\r\n            <div className=\"banner__text\">\r\n                New comics every week! <br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"avengers-logo\" className=\"banner__logo\"/>\r\n        </section>\r\n    );\r\n}","import error from './error.png';\r\nimport './error.scss'\r\n\r\nfunction Error() {\r\n    return (\r\n        <>\r\n            <img src={error} alt=\"\" className=\"error\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error;","import { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport SingleItemPage from \"../singleItemPage/SingleItemPage\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nexport default function SingleCharPage() {\r\n    const [inProp, setInProp] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <CSSTransition in={inProp} timeout={300} classNames='animated'>\r\n                <SingleItemPage type=\"character\" setInProp={setInProp}/>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}","import Helmet from 'react-helmet';\r\n\r\nimport './singleCharLayout.scss';\r\n\r\nexport default function SingleCharLayout({data}) {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`Page with ${data.name} info`}\r\n                />\r\n                <title>{data.name}</title>\r\n            </Helmet>\r\n            <section className=\"single-character\">\r\n                <img src={data.thumbnail} alt={data.name} className=\"single-character__img\"/>\r\n                <div className=\"single-character__text\">\r\n                    <p className=\"single-character__text-name\">{data.name}</p>\r\n                    <p className=\"single-character__text-description\">\r\n                        {data.description}\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport './singleComicLayout.scss';\r\n\r\nexport default function SingleComicLayout({data}) {\r\n    return (\r\n        <section className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`Page with ${data.title} comic book`}\r\n                />\r\n                <title>{data.title}</title>\r\n            </Helmet>\r\n            <div className=\"single-comic__info\">\r\n                <img src={data.thumbnail} alt={data.title} className=\"single-comic__img\"/>\r\n                <div className=\"single-comic__text\">\r\n                    <p className=\"single-comic__text-title\">{data.title}</p>\r\n                    <p className=\"single-comic__text-description\">\r\n                        {data.description}\r\n                    </p>\r\n                    <p className=\"single-comic__text-pages\">{data.pages ? data.pages + ' pages' : null}</p>\r\n                    <p className=\"single-comic__text-language\"> {data.language ? 'Language: ' + data.language : null}</p>\r\n                    <p className=\"single-comic__text-price\">{data.price ? data.price + '$' : 'NOT AVAILABLE'}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport SingleCharLayout from '../singleCharLayout/SingleCharLayout';\r\nimport SingleComicLayout from '../singleComicLayout/SingleComicLayout';\r\nimport setContent from '../../utils/setContent';\r\n\r\nexport default function Info({type}) {\r\n    const [data, setData] = useState(null);\r\n    const {getCharacterByName, getComicById, process, setProcess} = useMarvelServices();\r\n    const {id} = useParams();\r\n\r\n    function updateData() {\r\n        switch(type) {\r\n            case \"character\":\r\n                return getCharacterByName(id);\r\n            case \"comic\":\r\n                return getComicById(id);\r\n            default:\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n            .then(data => setData(data))\r\n            .then(() => setProcess('confirmed'))\r\n            .catch(() => setProcess('error'));\r\n    }, [])\r\n\r\n    function renderData() {\r\n        switch(type) {\r\n            case \"character\":\r\n                return (<SingleCharLayout data={data}/>)\r\n            case \"comic\":\r\n                return (<SingleComicLayout data={data}/>)\r\n            default:\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {setContent(process, () => renderData(), data)}\r\n        </>\r\n    )\r\n}","var _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0s\",\n    calcMode: \"discrete\"\n  }))), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.125s\",\n    calcMode: \"discrete\"\n  }))), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 19,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.25s\",\n    calcMode: \"discrete\"\n  }))), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 40,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.875s\",\n    calcMode: \"discrete\"\n  }))), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 40,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.375s\",\n    calcMode: \"discrete\"\n  }))), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 19,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.75s\",\n    calcMode: \"discrete\"\n  }))), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.625s\",\n    calcMode: \"discrete\"\n  }))), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 61,\n    y: 61,\n    width: 20,\n    height: 20,\n    fill: \"#232222\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill\",\n    values: \"#9f0013;#232222;#232222\",\n    keyTimes: \"0;0.125;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    begin: \"0.5s\",\n    calcMode: \"discrete\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.abba77cc71e5f76258fc50b87e593ac6.svg\";\nexport { ForwardRef as ReactComponent };","import spinner from './spinner.svg'\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    \r\n    return (\r\n        <>\r\n            <img src={spinner} alt=\"\" className=\"spinner\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import md5 from \"md5\";\r\nimport useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelServices() {\r\n    const {request, process, setProcess} = useHttp();\r\n\r\n    const _offset = 210,\r\n          _apibase = 'https://gateway.marvel.com:443/v1/public/',\r\n          _publickey = 'b613e5c1ee278d1974ac9c3d77544391',\r\n          _privatekey = 'b32e138e4085075474c409641be15ebc5b46dd44';\r\n    \r\n    const timestamp = +new Date(),\r\n          hash = md5(timestamp + _privatekey + _publickey);\r\n\r\n    async function getCharacters(offset = _offset) {\r\n        const result = await request(`${_apibase}characters?` +\r\n                                         `limit=9&offset=${offset}` +\r\n                                         \"&ts=\" + timestamp +\r\n                                         \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                         \"&hash=\" + hash);\r\n            \r\n        return result.data.results.map(_handleChars)\r\n    }\r\n\r\n    async function getCharacterById(id) {\r\n        const response = await request(`${_apibase}characters/${id}?` +\r\n                                            \"&ts=\" + timestamp +\r\n                                            \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                            \"&hash=\" + hash);\r\n\r\n        return _handleChars(response.data.results[0]);\r\n    }\r\n\r\n    async function getComics(offset = 0) {\r\n        const response = await request(`${_apibase}comics?limit=8&offset=${offset}` + \r\n                                       \"&ts=\" + timestamp +\r\n                                       \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                       \"&hash=\" + hash);\r\n\r\n        return response.data.results.map(_handleComics);\r\n    }\r\n\r\n    async function getComicById(id) {\r\n        const response = await request(`${_apibase}comics/${id}?` + \r\n                                        `ts=` + timestamp +\r\n                                        \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                        \"&hash=\" + hash);\r\n\r\n        return _handleComics(response.data.results[0]);\r\n    } \r\n\r\n    async function getCharacterByName(name) {\r\n        const response = await request(`${_apibase}characters?name=${name}&` +\r\n                                        `ts=` + timestamp +\r\n                                        \"&apikey=b613e5c1ee278d1974ac9c3d77544391\" +\r\n                                        \"&hash=\" + hash)\r\n        \r\n        return _handleChars(response.data.results[0]);\r\n    }\r\n\r\n    const _handleChars = (response) => ({\r\n        id: response.id,\r\n        name: response.name,\r\n        description: response.description ? response.description : 'There is no description here. Yet...',\r\n        thumbnail: response.thumbnail.path + '.' + response.thumbnail.extension,\r\n        homepage: response.urls[0].url,\r\n        wiki: response.urls[1].url,\r\n        comics: response.comics.items\r\n    })\r\n\r\n    const _handleComics = (comic) => ({\r\n        id: comic.id,\r\n        title: comic.title,\r\n        thumbnail: Object.values(comic.thumbnail).join('.'),\r\n        price: comic.prices[0].price,\r\n        description: comic.description ? comic.description : 'There is no description here. Yet...',\r\n        pages: comic.pageCount,\r\n        language: comic.textObjects[0] ? comic.textObjects[0].language : ''\r\n    })\r\n\r\n    return {\r\n        getCharacters, \r\n        getCharacterById, \r\n        getComics, \r\n        getComicById, \r\n        getCharacterByName, \r\n        process,\r\n        setProcess\r\n    }\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport default function useHttp() {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch from ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        } catch(error) {\r\n            setProcess('error');\r\n            return error;\r\n        }\r\n    }, []);\r\n\r\n    return {request, process, setProcess};\r\n}","import Error from '../components/error/Error';\r\nimport Spinner from '../components/spinner/Spinner';\r\n\r\nexport default function setContent(process, Component, data) {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <Error/>;\r\n        default:\r\n    }\r\n}"],"names":["AppBanner","className","src","avengers","alt","avengersLogo","error","SingleCharPage","useState","inProp","setInProp","in","timeout","classNames","type","SingleCharLayout","data","Helmet","name","content","thumbnail","description","SingleComicLayout","title","pages","language","price","to","Info","setData","useMarvelServices","getCharacterByName","getComicById","process","setProcess","id","useParams","useEffect","updateData","then","catch","setContent","renderData","spinner","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","useHttp","_offset","_apibase","timestamp","Date","hash","md5","offset","result","results","map","_handleChars","_handleComics","path","extension","homepage","urls","wiki","comics","items","comic","Object","values","join","prices","pageCount","textObjects","getCharacters","getCharacterById","getComics","Component"],"sourceRoot":""}